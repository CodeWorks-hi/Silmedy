// Generated by view binder compiler. Do not edit!
package com.example.silmedy.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.silmedy.R;
import com.google.android.material.bottomnavigation.BottomNavigationView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityClinicHomeBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final BottomNavigationView bottomNavigation;

  @NonNull
  public final ImageView btnBack;

  @NonNull
  public final CardView cardAi;

  @NonNull
  public final CardView cardCold;

  @NonNull
  public final CardView cardTouchSymptom;

  @NonNull
  public final LinearLayout featureCards;

  @NonNull
  public final View statusBarSpacer;

  @NonNull
  public final TextView textGreeting;

  private ActivityClinicHomeBinding(@NonNull ConstraintLayout rootView,
      @NonNull BottomNavigationView bottomNavigation, @NonNull ImageView btnBack,
      @NonNull CardView cardAi, @NonNull CardView cardCold, @NonNull CardView cardTouchSymptom,
      @NonNull LinearLayout featureCards, @NonNull View statusBarSpacer,
      @NonNull TextView textGreeting) {
    this.rootView = rootView;
    this.bottomNavigation = bottomNavigation;
    this.btnBack = btnBack;
    this.cardAi = cardAi;
    this.cardCold = cardCold;
    this.cardTouchSymptom = cardTouchSymptom;
    this.featureCards = featureCards;
    this.statusBarSpacer = statusBarSpacer;
    this.textGreeting = textGreeting;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityClinicHomeBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityClinicHomeBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_clinic_home, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityClinicHomeBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.bottom_navigation;
      BottomNavigationView bottomNavigation = ViewBindings.findChildViewById(rootView, id);
      if (bottomNavigation == null) {
        break missingId;
      }

      id = R.id.btnBack;
      ImageView btnBack = ViewBindings.findChildViewById(rootView, id);
      if (btnBack == null) {
        break missingId;
      }

      id = R.id.card_ai;
      CardView cardAi = ViewBindings.findChildViewById(rootView, id);
      if (cardAi == null) {
        break missingId;
      }

      id = R.id.card_cold;
      CardView cardCold = ViewBindings.findChildViewById(rootView, id);
      if (cardCold == null) {
        break missingId;
      }

      id = R.id.card_touch_symptom;
      CardView cardTouchSymptom = ViewBindings.findChildViewById(rootView, id);
      if (cardTouchSymptom == null) {
        break missingId;
      }

      id = R.id.featureCards;
      LinearLayout featureCards = ViewBindings.findChildViewById(rootView, id);
      if (featureCards == null) {
        break missingId;
      }

      id = R.id.statusBarSpacer;
      View statusBarSpacer = ViewBindings.findChildViewById(rootView, id);
      if (statusBarSpacer == null) {
        break missingId;
      }

      id = R.id.text_greeting;
      TextView textGreeting = ViewBindings.findChildViewById(rootView, id);
      if (textGreeting == null) {
        break missingId;
      }

      return new ActivityClinicHomeBinding((ConstraintLayout) rootView, bottomNavigation, btnBack,
          cardAi, cardCold, cardTouchSymptom, featureCards, statusBarSpacer, textGreeting);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
