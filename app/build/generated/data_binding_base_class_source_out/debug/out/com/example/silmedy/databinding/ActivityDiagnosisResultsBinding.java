// Generated by view binder compiler. Do not edit!
package com.example.silmedy.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.silmedy.R;
import com.google.android.material.bottomnavigation.BottomNavigationView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityDiagnosisResultsBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final BottomNavigationView bottomNavigation;

  @NonNull
  public final ImageView btnBack;

  @NonNull
  public final Button buttonReservation;

  @NonNull
  public final ImageView imageDiagnosis;

  @NonNull
  public final TextView textPartDisease;

  @NonNull
  public final TextView textView2;

  @NonNull
  public final TextView title;

  private ActivityDiagnosisResultsBinding(@NonNull ConstraintLayout rootView,
      @NonNull BottomNavigationView bottomNavigation, @NonNull ImageView btnBack,
      @NonNull Button buttonReservation, @NonNull ImageView imageDiagnosis,
      @NonNull TextView textPartDisease, @NonNull TextView textView2, @NonNull TextView title) {
    this.rootView = rootView;
    this.bottomNavigation = bottomNavigation;
    this.btnBack = btnBack;
    this.buttonReservation = buttonReservation;
    this.imageDiagnosis = imageDiagnosis;
    this.textPartDisease = textPartDisease;
    this.textView2 = textView2;
    this.title = title;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityDiagnosisResultsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityDiagnosisResultsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_diagnosis_results, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityDiagnosisResultsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.bottom_navigation;
      BottomNavigationView bottomNavigation = ViewBindings.findChildViewById(rootView, id);
      if (bottomNavigation == null) {
        break missingId;
      }

      id = R.id.btnBack;
      ImageView btnBack = ViewBindings.findChildViewById(rootView, id);
      if (btnBack == null) {
        break missingId;
      }

      id = R.id.button_reservation;
      Button buttonReservation = ViewBindings.findChildViewById(rootView, id);
      if (buttonReservation == null) {
        break missingId;
      }

      id = R.id.image_diagnosis;
      ImageView imageDiagnosis = ViewBindings.findChildViewById(rootView, id);
      if (imageDiagnosis == null) {
        break missingId;
      }

      id = R.id.text_part_disease;
      TextView textPartDisease = ViewBindings.findChildViewById(rootView, id);
      if (textPartDisease == null) {
        break missingId;
      }

      id = R.id.textView2;
      TextView textView2 = ViewBindings.findChildViewById(rootView, id);
      if (textView2 == null) {
        break missingId;
      }

      id = R.id.title;
      TextView title = ViewBindings.findChildViewById(rootView, id);
      if (title == null) {
        break missingId;
      }

      return new ActivityDiagnosisResultsBinding((ConstraintLayout) rootView, bottomNavigation,
          btnBack, buttonReservation, imageDiagnosis, textPartDisease, textView2, title);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
