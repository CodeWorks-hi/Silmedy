// Generated by view binder compiler. Do not edit!
package com.example.silmedy.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.ImageButton;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.silmedy.R;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textfield.TextInputLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityFindPasswordBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final ImageButton btnBack;

  @NonNull
  public final MaterialButton btnChangePassword;

  @NonNull
  public final MaterialButton btnCode;

  @NonNull
  public final MaterialButton btnVerify;

  @NonNull
  public final LinearLayout codeBlock;

  @NonNull
  public final EditText editCode;

  @NonNull
  public final TextInputEditText editConfirmPassword;

  @NonNull
  public final EditText editEmail;

  @NonNull
  public final TextInputEditText editNewPassword;

  @NonNull
  public final EditText editPhone;

  @NonNull
  public final TextInputLayout inputConfirmPasswordLayout;

  @NonNull
  public final TextInputLayout inputNewPasswordLayout;

  @NonNull
  public final TextView labelCode;

  @NonNull
  public final TextView labelConfirmPassword;

  @NonNull
  public final TextView labelEmail;

  @NonNull
  public final TextView labelNewPassword;

  @NonNull
  public final TextView labelPhone;

  @NonNull
  public final LinearLayout phoneBlock;

  @NonNull
  public final TextView titleText;

  @NonNull
  public final LinearLayout topBar;

  private ActivityFindPasswordBinding(@NonNull RelativeLayout rootView,
      @NonNull ImageButton btnBack, @NonNull MaterialButton btnChangePassword,
      @NonNull MaterialButton btnCode, @NonNull MaterialButton btnVerify,
      @NonNull LinearLayout codeBlock, @NonNull EditText editCode,
      @NonNull TextInputEditText editConfirmPassword, @NonNull EditText editEmail,
      @NonNull TextInputEditText editNewPassword, @NonNull EditText editPhone,
      @NonNull TextInputLayout inputConfirmPasswordLayout,
      @NonNull TextInputLayout inputNewPasswordLayout, @NonNull TextView labelCode,
      @NonNull TextView labelConfirmPassword, @NonNull TextView labelEmail,
      @NonNull TextView labelNewPassword, @NonNull TextView labelPhone,
      @NonNull LinearLayout phoneBlock, @NonNull TextView titleText, @NonNull LinearLayout topBar) {
    this.rootView = rootView;
    this.btnBack = btnBack;
    this.btnChangePassword = btnChangePassword;
    this.btnCode = btnCode;
    this.btnVerify = btnVerify;
    this.codeBlock = codeBlock;
    this.editCode = editCode;
    this.editConfirmPassword = editConfirmPassword;
    this.editEmail = editEmail;
    this.editNewPassword = editNewPassword;
    this.editPhone = editPhone;
    this.inputConfirmPasswordLayout = inputConfirmPasswordLayout;
    this.inputNewPasswordLayout = inputNewPasswordLayout;
    this.labelCode = labelCode;
    this.labelConfirmPassword = labelConfirmPassword;
    this.labelEmail = labelEmail;
    this.labelNewPassword = labelNewPassword;
    this.labelPhone = labelPhone;
    this.phoneBlock = phoneBlock;
    this.titleText = titleText;
    this.topBar = topBar;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityFindPasswordBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityFindPasswordBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_find_password, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityFindPasswordBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnBack;
      ImageButton btnBack = ViewBindings.findChildViewById(rootView, id);
      if (btnBack == null) {
        break missingId;
      }

      id = R.id.btnChangePassword;
      MaterialButton btnChangePassword = ViewBindings.findChildViewById(rootView, id);
      if (btnChangePassword == null) {
        break missingId;
      }

      id = R.id.btnCode;
      MaterialButton btnCode = ViewBindings.findChildViewById(rootView, id);
      if (btnCode == null) {
        break missingId;
      }

      id = R.id.btnVerify;
      MaterialButton btnVerify = ViewBindings.findChildViewById(rootView, id);
      if (btnVerify == null) {
        break missingId;
      }

      id = R.id.codeBlock;
      LinearLayout codeBlock = ViewBindings.findChildViewById(rootView, id);
      if (codeBlock == null) {
        break missingId;
      }

      id = R.id.editCode;
      EditText editCode = ViewBindings.findChildViewById(rootView, id);
      if (editCode == null) {
        break missingId;
      }

      id = R.id.editConfirmPassword;
      TextInputEditText editConfirmPassword = ViewBindings.findChildViewById(rootView, id);
      if (editConfirmPassword == null) {
        break missingId;
      }

      id = R.id.editEmail;
      EditText editEmail = ViewBindings.findChildViewById(rootView, id);
      if (editEmail == null) {
        break missingId;
      }

      id = R.id.editNewPassword;
      TextInputEditText editNewPassword = ViewBindings.findChildViewById(rootView, id);
      if (editNewPassword == null) {
        break missingId;
      }

      id = R.id.editPhone;
      EditText editPhone = ViewBindings.findChildViewById(rootView, id);
      if (editPhone == null) {
        break missingId;
      }

      id = R.id.inputConfirmPasswordLayout;
      TextInputLayout inputConfirmPasswordLayout = ViewBindings.findChildViewById(rootView, id);
      if (inputConfirmPasswordLayout == null) {
        break missingId;
      }

      id = R.id.inputNewPasswordLayout;
      TextInputLayout inputNewPasswordLayout = ViewBindings.findChildViewById(rootView, id);
      if (inputNewPasswordLayout == null) {
        break missingId;
      }

      id = R.id.labelCode;
      TextView labelCode = ViewBindings.findChildViewById(rootView, id);
      if (labelCode == null) {
        break missingId;
      }

      id = R.id.labelConfirmPassword;
      TextView labelConfirmPassword = ViewBindings.findChildViewById(rootView, id);
      if (labelConfirmPassword == null) {
        break missingId;
      }

      id = R.id.labelEmail;
      TextView labelEmail = ViewBindings.findChildViewById(rootView, id);
      if (labelEmail == null) {
        break missingId;
      }

      id = R.id.labelNewPassword;
      TextView labelNewPassword = ViewBindings.findChildViewById(rootView, id);
      if (labelNewPassword == null) {
        break missingId;
      }

      id = R.id.labelPhone;
      TextView labelPhone = ViewBindings.findChildViewById(rootView, id);
      if (labelPhone == null) {
        break missingId;
      }

      id = R.id.phoneBlock;
      LinearLayout phoneBlock = ViewBindings.findChildViewById(rootView, id);
      if (phoneBlock == null) {
        break missingId;
      }

      id = R.id.titleText;
      TextView titleText = ViewBindings.findChildViewById(rootView, id);
      if (titleText == null) {
        break missingId;
      }

      id = R.id.topBar;
      LinearLayout topBar = ViewBindings.findChildViewById(rootView, id);
      if (topBar == null) {
        break missingId;
      }

      return new ActivityFindPasswordBinding((RelativeLayout) rootView, btnBack, btnChangePassword,
          btnCode, btnVerify, codeBlock, editCode, editConfirmPassword, editEmail, editNewPassword,
          editPhone, inputConfirmPasswordLayout, inputNewPasswordLayout, labelCode,
          labelConfirmPassword, labelEmail, labelNewPassword, labelPhone, phoneBlock, titleText,
          topBar);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
