// Generated by view binder compiler. Do not edit!
package com.example.silmedy.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.silmedy.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityLoginBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final TextView btnFindId;

  @NonNull
  public final TextView btnFindPassword;

  @NonNull
  public final TextView btnJoin;

  @NonNull
  public final Button btnLogin;

  @NonNull
  public final EditText editEmail;

  @NonNull
  public final EditText editPassword;

  @NonNull
  public final ImageView logoImage;

  private ActivityLoginBinding(@NonNull LinearLayout rootView, @NonNull TextView btnFindId,
      @NonNull TextView btnFindPassword, @NonNull TextView btnJoin, @NonNull Button btnLogin,
      @NonNull EditText editEmail, @NonNull EditText editPassword, @NonNull ImageView logoImage) {
    this.rootView = rootView;
    this.btnFindId = btnFindId;
    this.btnFindPassword = btnFindPassword;
    this.btnJoin = btnJoin;
    this.btnLogin = btnLogin;
    this.editEmail = editEmail;
    this.editPassword = editPassword;
    this.logoImage = logoImage;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityLoginBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityLoginBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_login, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityLoginBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnFindId;
      TextView btnFindId = ViewBindings.findChildViewById(rootView, id);
      if (btnFindId == null) {
        break missingId;
      }

      id = R.id.btnFindPassword;
      TextView btnFindPassword = ViewBindings.findChildViewById(rootView, id);
      if (btnFindPassword == null) {
        break missingId;
      }

      id = R.id.btnJoin;
      TextView btnJoin = ViewBindings.findChildViewById(rootView, id);
      if (btnJoin == null) {
        break missingId;
      }

      id = R.id.btnLogin;
      Button btnLogin = ViewBindings.findChildViewById(rootView, id);
      if (btnLogin == null) {
        break missingId;
      }

      id = R.id.editEmail;
      EditText editEmail = ViewBindings.findChildViewById(rootView, id);
      if (editEmail == null) {
        break missingId;
      }

      id = R.id.editPassword;
      EditText editPassword = ViewBindings.findChildViewById(rootView, id);
      if (editPassword == null) {
        break missingId;
      }

      id = R.id.logoImage;
      ImageView logoImage = ViewBindings.findChildViewById(rootView, id);
      if (logoImage == null) {
        break missingId;
      }

      return new ActivityLoginBinding((LinearLayout) rootView, btnFindId, btnFindPassword, btnJoin,
          btnLogin, editEmail, editPassword, logoImage);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
